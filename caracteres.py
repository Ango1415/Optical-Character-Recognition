# -*- coding: utf-8 -*-
"""caracteres.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Rm0mFc_C0wnBu8lHopO4YpOqj1lOhnFY
"""

from google.colab import drive
drive.mount('/content/drive')

def clasificacion():
          
          import numpy as np
          import matplotlib.pyplot as plt
          from sklearn.preprocessing import StandardScaler
          from sklearn.naive_bayes import GaussianNB
          from sklearn.metrics import confusion_matrix
          from sklearn.svm import SVC
          from sklearn.tree import DecisionTreeClassifier 
          from sklearn.ensemble import RandomForestClassifier
          from sklearn.model_selection import KFold, cross_val_score
          from sklearn.decomposition import PCA
          import cv2
          from scipy.signal import convolve2d
          from sklearn.pipeline import Pipeline
          from skimage import filters
         
          import pandas as pd
          X_test = pd.read_csv("drive/My Drive/Colab Notebooks/ai-20182-master/data/emnist-letters-test-images.csv", header=None).values.astype(float)
          y_test= pd.read_csv("drive/My Drive/Colab Notebooks/ai-20182-master/data/emnist-letters-test-labels.csv", header=None).values
          X_train= pd.read_csv("drive/My Drive/Colab Notebooks/ai-20182-master/data/emnist-letters-train-images2.csv", header=None).values.astype(float)
          y_train= pd.read_csv("drive/My Drive/Colab Notebooks/ai-20182-master/data/emnist-letters-train-labels2.csv", header=None).values
         

          #Para rotar la imagen 
          for j in range(62400):
            Y=X_train[j].reshape(28,28).T
            X_train[j]=Y.reshape(784)

          for j in range(20800):
              Y=X_test[j].reshape(28,28).T
              X_test[j]=Y.reshape(784)


          #Clasificadores

          est1=RandomForestClassifier(n_estimators=80,  max_depth = 20)

          #Binarizaci√≥n
          for j in range(62400):
              img=X_train[j].reshape(28,28)
              _, img1 = cv2.threshold(img,110, 255, cv2.THRESH_BINARY)
              X_train[j]=img1.reshape(784)

          for j in range(20800):
              img=X_test[j].reshape(28,28)
              _, img1 = cv2.threshold(img,110, 255, cv2.THRESH_BINARY)
              X_test[j]=img1.reshape(784)


          #PCA con n componentes
          pca=PCA(n_components=40)
          X_train = pca.fit_transform(X_train)
          X_test = pca.transform (X_test)


          #RandomForest
          objeto= est1.fit(X_train,y_train)
          return objeto

